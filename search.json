[{"title":"DMS note book","date":"2024-01-08T18:26:12.000Z","url":"/2024/01/08/DMS-note-book/","tags":[["OOP","/tags/OOP/"],["study","/tags/study/"],["English","/tags/English/"],["maintaince","/tags/maintaince/"]],"categories":[["课程学习","/categories/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/"]],"content":"A note book for my DMS learning.DMS stands for Developing maintainable software. I am now writing this note book for better understanding since there exist a mass of concepts. At the same time I hope this note help my future employment. lecture 1 - Basic OO Concept1.obeject-oriented programming is founded on these ideas: Abstraction: Simple things like objects represent more complex underlying code and data Encapsulation: The ability to protect some components of the object from external access Inheritance: The ability for a class(“subclass”) to extend or override functionality or another class(“superclass”) Polymorphism: The provision(提供) of a single interface to entities of different types. It has two types. Method overriding: Compile time polymorphism. Methods with same class name, input and parameters appear in both super class and subclass. Method overloading: Run time polymorphism. Methods in same class have same name but different in parameters. 2.Public and PrivateAccess rules, 还有protected等. declear as public: constructors, methods and static constants declear as private: helper method(needed only inside the class), fields 3.Accessors and Modifiers Accessors(getters): xxx.get(), method that return values of private fields. Modifiers(setters&#x2F;mutators): xxx.set(), method that set values of private fields. 4.EncapsulationEncapsulation即“stop other changing it” Hiding the impilmentation details of a class is called encapsulation Encapsulation helps with program maintenance: a change in class does not affect other classes A client of a class interacts with the class only through well-documented public constructors and methods; this facilitates team development 5.The keyword “this”“this“ refers to the implicit parameter inside your class. It can refer to a field this.field or call a method this.method(parameters). Can also be used in constructor(this化身变成Constructors，见下文). 6.ConstructorsThe constructor method is a special method of a class for creating object instances of that class. 可以有多个，但不能同参: If a class has more than one constructor, they must have different numbers and&#x2F;or types of parameters (constructor overloading) Constructors are invoked using the operator new. ★Constructors of a class can call each other using the keyword “this” (referred to as constructor chaining) - a good way to avoid duplicating code lecture 2 - More Advanced Java Topics1.Passing by Value &amp; Passing by Reference在java中，data is always passed by value(including object reference, in other word the pointer)!!! Passing by value constitutes copying of data, where changes to the copied value are not reflected in the original value Passing by reference constitutes(构成) the aliasing(别名) of data, where changes to the aliased value are reflected in the original value(in java, object references(pointer) are passed by value) 2.Static Fields &amp; Static Methods2.1 Static Fields: A static field (class field or class variable) is shared by all objects of the class A non-static field (instance field or instance variable) belongs to an individualobject Modifying a Static Field Affects All Instances Usually static fields are NOT initialised in constructors; they are initialised either in declarations or in public static methods or just use their default value 2.2 Static Methods Static methods can access and manipulate(操纵) class’s static fields. They belong to the class - not an instance of it Note that static methods cannot access instance fields or call instance methods of the class while instance methods can access all fields and call all methods of their class - both static and non-static(I have suffered a lot from the snake game cw) 3.Java Collections FrameworkJava collection Framework(JCF) is a set of classes and interface in java, provided for storing and processing collections of data. It is a part of the java.util package.可理解为java语言中的数据结构包 API&library API stands for: Application Programming Interace. Difference between a library and an API: An API is an interface or communication protocol between a client and a server, intended to simplify the building of client-side software. A library contains re-usable chunks of code. A collection is an object that repersents a group of objects.Core collection framework interface: Iterable: Represents an iterator object Collection: Represents a dynamic group of objects (elements) Map: Maps keys to values; no duplicate keys(eg.HasMap) Queue: Represents FIFO queues or LIFO stacks Deque: Represents a double ended queue Set: A collection that cannot contain duplicate elements(eg.HashSet, TreeSet) List: An ordered sequence of elements that allows duplicate elements(eg.ArrayList, LinkedList) following is about implementation of object oriented concepts in java 4. Aggregation and Compositionthey both have “has-a” relationship What is the difference between the Aggregations and Compositions? answer comes from GPT: 生命周期的依赖性： 聚合（Aggregation）：在聚合关系中，子对象可以独立于父对象存在。父对象的创建和销毁不会影响子对象的生命周期。 组合（Composition）：在组合关系中，子对象的生命周期完全依赖于父对象。当父对象被销毁时，子对象也会随之被销毁。 所有权： 聚合：表示一种较弱的关系。子对象可以被多个父对象共享或关联。 组合：表示一种更强的关系。子对象严格属于一个父对象，并且通常不与其他父对象共享 answer from slids: In Aggregation, The object exists outside the other, is created outside, so it is passed as an argument In Composition, The object only exists, or only makes sense inside the other, as a part of the other 4.1 Aggregation in java An object of class B is part of an object of class A (semantically) but the object of class B can be shared and if the object of class A is deleted, the object of class B is not deleted. 4.2 Composition in java An object of class A owns an object of class B and the object of class B cannot beshared and if the object of class A is deleted, the object of class B is also deleted 5.Inheritance &amp; Polymorphism What is inheritance and why do we use it? answer comes from slids: Inheritance: Forming new classes based on existing ones Superclass: Parent class being extended Subclass: Child class that inherits behaviour from the parent class “Is-A” relationship What is the difference between polymorphism, method overloading, and method overriding? answer comes from slids: Polymorphism Polymorphism is an object oriented concept Method overloading and method overriding are two forms of polymorphism Method overloading Methods with same the name co-exists in the same class but they must have different method signature (number&#x2F;type of parameters – think about constructors) Resolved during compile time (static binding) Method overriding Method with the same name is declared in super and sub class (think about the bike1.currentState() example from labsheet 1) Resolved during runtime 6.Abstract Methods &amp; Classes, InterfaceUsually abstract class(eg.animal) implement an interface(eg.Maintainable), and the abstract class get Inheritanced from other classes(eg.reptile). The abstract methods in abstract class(or it should be called superclass) and methods in interface can be overrided in subclass. What is the difference between an abstract class and interface in Java? answer comes from slids: Java abstract class Can have instance methods that implement a default behaviour(可以同时有abstract method和instance method) May contain non-final variables Java interfaces Methods are implicitly(含蓄地) abstract and most cannot have implementations(无instance method) Variables declared are by default static and final 7.Java Release不想写了，等明天吧，晚安"},{"title":"I'm not WNB","date":"2024-01-07T00:48:53.000Z","url":"/2024/01/07/My-New-Post/","tags":[["test","/tags/test/"]],"categories":[["开发日志","/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"]],"content":"测试笔记。现在是格林威治时间 2024年1月7日，0点51分。 差不多该睡觉了，但现在小破华为突然开始播放MJ的Beat it， emmmmmmmm，exciting！ 顺便测试一些东西代码显示 简单的C语言hello world示范 内容折叠 这是一条折叠内容 你怎么能打开它不要啦！快点拉上！！！ 还不赶快拉上！ 提示面板 面板框的标题 公开处刑1号公开处刑2号 其中TYPE可以是success&#x2F;danger&#x2F;info&#x2F;warning 提示信息真的有人会看吗 应该会有人吧，，， 万一真的没有呢Σ(っ °Д °;)っ 不，一定会有人的(・∀・(・∀・(・∀・*) 别看了，说的就是你 模糊字面我不知道你能不能看得清这些东西 "},{"title":"Hello World","date":"2024-01-07T00:01:47.953Z","url":"/2024/01/07/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]